<scxml
    version="1.0"
    xmlns="..."
    datamodel="ecmascript"
    name="RunTimerSkill"
    initial="idle"> 

    <datamodel>
        <data id="timer_active" type="Bool" expr="false" />
    </datamodel>

    <!-- RunTimerSkill is a server for tick from the ROS2Action plugin-->
    <ros_service_server service="/RunTimerSkill/tick" type ="bt_interface/TickAction"/>
    <!-- RunTimerSkill is a server for halt from the ROS2Action plugin-->
    <ros_service_server service="/RunTimerSkill/halt" type ="bt_interface/HaltAction"/>
    <!-- RunTimerSkill is a client for IsTimerActive from the TimerComponent -->
    <ros_service_client service="/TimerComponent/IsTimerActive" type ="timer_interfaces/IsTimerActive"/>
    <!-- RunTimerSkill is a client for StartTimer from the TimerComponent -->
    <ros_service_client service="/TimerComponent/StartTimer" type ="timer_interfaces/StartTimer"/>

    <state id="idle">
        <ros_service_handle_request id="/RunTimerSkill/tick" target="isTimerActive">
            <ros_service_send_request id="/TimerComponent/IsTimerActive"/>
        </ros_service_handle_request>
        <ros_service_handle_request id="/RunTimerSkill/halt" target="idle">
            <ros_service_send_response id="/RunTimerSkill/halt"/>
        </ros_service_handle_request>

    </state>

    <state id="isTimerActive">
        <ros_service_handle_response service="/TimerComponent/isTimerActive" cond="!(_service.response.is_ok) " target="idle">
            <ros_service_send_response id="/RunTimerSkill/tick">
                <param name="result" expr='"FAILURE"'/>
            </ros_service_send_response>
        </ros_service_handle_response>
        <ros_service_handle_response service="/TimerComponent/isTimerActive" cond="_service.response.is_active " target="idle">
            <ros_service_send_response id="/RunTimerSkill/tick">
                <param name="result" expr='"RUNNING"'/>
            </ros_service_send_response>
        </ros_service_handle_response>
        <ros_service_handle_response service="/TimerComponent/isTimerActive" cond="!(_service.response.is_active)" target="startTimer">
            <ros_service_send_request id="/TimerComponent/StartTimer"/>
        </ros_service_handle_response>
        <ros_service_handle_request id="/RunTimerSkill/halt" target="idle">
            <ros_service_send_response id="/RunTimerSkill/halt"/>
        </ros_service_handle_request>

    </state>

    <state id="startTimer">
        <ros_service_handle_response service="/TimerComponent/StartTimer" cond="_service.response.is_ok" target="idle">
            <ros_service_send_response id="/RunTimerSkill/tick">
                <param name="result" expr='"SUCCESS"'/>
            </ros_service_send_response>
        </ros_service_handle_response>
        <ros_service_handle_response service="/TimerComponent/StartTimer" cond="!(_service.response.is_ok)" target="idle">
            <ros_service_send_response id="/RunTimerSkill/tick">
                <param name="result" expr='"FAILURE"'/>
            </ros_service_send_response>
        </ros_service_handle_response>
        <ros_service_handle_request id="/RunTimerSkill/halt" target="idle">
            <ros_service_send_response id="/RunTimerSkill/halt"/>
        </ros_service_handle_request>
        <ros_service_handle_request id="/RunTimerSkill/halt" target="idle">
            <ros_service_send_response id="/RunTimerSkill/halt"/>
        </ros_service_handle_request>
    </state>
</scxml>

