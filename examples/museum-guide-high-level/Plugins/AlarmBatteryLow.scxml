<scxml 
  version="1.0"
  xmlns="..."
  datamodel="ecmascript"
  name="AlarmBatteryLow"
  initial="idle">

  <!-- AlarmBatteryLow is a server for tick and halt from the BT -->
  <ros_sync_service_server id="/AlarmBatteryLow/tick"/> 
  <ros_sync_service_server id="/AlarmBatteryLow/halt"/> 
  <!-- AlarmBatteryLow is a client for sendAlarm from the AlarmCmp component-->
  <ros_async_service_client id="/AlarmCmp/sendAlarm"/> 

  <state id="idle">
    <!-- If ticked, send a query to the AlarmCmp component -->
    <ros_sync_service_handle_request id="/AlarmBatteryLow/tick" target="sendAlarm"/>
    <!-- If halted, do nothing-->
    <ros_sync_service_handle_request id="/AlarmBatteryLow/halt" target="idle">
      <ros_sync_service_send_response id="/AlarmBatteryLow/halt"/>
    </ros_sync_service_handle_request>
  </state>

	<state id="sendAlarm">
    <onentry>
      <ros_async_service_send_request id="/AlarmCmp/sendAlarm"/>
    </onentry>
    <ros_async_service_handle_response id="/AlarmCmp/sendAlarm" target="idle">
      <ros_sync_service_send_response id="/AlarmBatteryLow/tick">
        <param name="result" expr="SUCCESS"/>  
      </ros_sync_service_send_response>
    </ros_async_service_handle_respose>
  </state>
</scxml>
